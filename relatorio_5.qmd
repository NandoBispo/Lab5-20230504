---
title: "LABORATÓRIO 5: Regressão Linear"
author: "Fernado Bispo, Jeff Caponero"
format:
    pdf:
      toc: true
      toc-title: Sumário
      colorlinks: true
      documentclass: report
      papersize: letter
      number-sections: false
      geometry:
        - top=30mm
        - left=30mm
        - right=20mm
        - bottom=20mm
        - heightrounded
      fig-pos: "H"
      fig-align: center
      lang: pt-BR
      # fontfamily: libertinus
      fontsize: 12pt
      include-in-header:
      - text: |
          \usepackage{caption}
          \usepackage{fontspec}
          \usepackage{xcolor}
          \usepackage{indentfirst}
          \captionsetup[table]{name=Tabela}
---

```{r pacotes}
#| echo: false
#| warning: false


# PACOTES ----

if (!require(pacman)) install.packages("pacman")

pacman::p_load(tidyverse,  janitor, stargazer,  sjmisc, summarytools,
               kableExtra, moments, ggpubr, formattable, gridExtra, 
               glue, corrplot, sessioninfo, readxl, writexl, ggthemes,
               patchwork,  plotly, lmtest, olsrr, gglm, ggplot2,
               tidymodels, GGally, skimr, performance)

summarytools::st_options(lang = "pt")

``` 

# Introdução

O laboratório desta semana está subdividido em duas partes com análises de dois conjuntos de dados distintos que visa a continuidade da aplicação das técnicas de Regressão Linear Simples com a aplicabilidade das técnicas de análise de resíduos e transformação de variáveis inclusive.
Para melhor desenvolvimento do processo de analise, este relatório foi dividido em duas partes contendo as análises de cada um dos conjuntos de dados e contando com suas respectivas apresentações sobre o contexto a ser analisado.


# Parte 1: Regressão Linear Simples - Diagnóstico do modelo

```{r dados1}
#| echo: false
#| warning: false

## DADOS 1 ----

dados1 <- datasets::trees

dados1 <- dados1|>
  janitor::clean_names()

## Conversão de unidades
dados1 <- dados1|>
  mutate(
    height = height*0.3048,
    volume = volume*0.02831685,
    girth = girth*0.3048
  )
```



## Metodologia

O conjunto de dados *trees*, disponível no pacote *datasets*, contém informações de 31 cerejeiras (*Black cherry*) da Floresta Nacional de Allegheny, relativas a três características numéricas contínuas:

- Volume de madeira útil (em metros cúbicos (m³)); 
- Altura (em metros (m));
- Circunferência (em metros(m)) a 1,37 de altura.

Para esta atividade **serão considerados apenas as informações referentes ao volume e altura das árvores**. Com base nestes dados se desenvolverá:

(a) Ajuste um modelo linear simples para volume como função da altura da árvore;
(b) Avalação gráfica dos resíduos Jacknife para diagnóstico do modelo ajustado;
(c) Transformações da característrica utilizada como variável resposta do modelo;
(d) Avaliação da transformação mais apropriada dentro da família proposta por Box e
Cox;
(e) Indicação da melhor transformação analisada.


## Resultados



### Ajuste do Modelo

```{r fig1:dispersao+ajuste}
#| echo: false
#| warning: false
#| fig-height: 4
#| fig-width: 7


### Ajuste do Modelo + Gráfico ----
dados1|>
  ggplot(aes(x = height, y = volume)) +
  geom_point(
    color = "#234B6E"
    )+
  labs(
    title = "Modelo Ajustado entre o Volume e à Altura",
    y = 'Volume (m³)',
    x = 'Altura (m)'
  )+
  ggpubr::stat_cor(
    aes(label = paste(..r.label.., ..rr.label.., sep = "~`; `~")),
    cor.coef.name = c("R"),
    label.sep = "; ", geom = "text",
    color="red",
    method = "pearson",
    label.x = 19.2, label.y = 2, show.legend = F,
    p.accuracy = 0.001, r.accuracy = 0.0001,
    size = 3.5)+
  ggpubr::stat_regline_equation(
      aes(label = paste(..eq.label.., ..adj.rr.label.., sep = "~`; `~")),
          geom = "text", label.x = 19.2, label.y = 1.75, 
      position = "identity", 
      color="red",
      size = 3, show.legend = F
  )+
  geom_smooth(
    method=lm, se=T, formula = "y ~ x", color = "tomato")+
  theme_minimal()+
  scale_x_continuous(breaks = seq(19,27,1))+
  scale_y_continuous(
  breaks = seq(0, 2.5, 0.5),
    labels = scales::number_format(
      big.mark = ".",
      decimal.mark = ","
    ))+
    theme(legend.position = "none",
          axis.line = element_line(size = 0.8, color = "#222222"))

## Modelo Ajustado
mFit1 <- lm(volume~height, data = dados1)

```


Com base na Figura 1 é possível sugerir uma relação positiva entre as variáveis **Volume** e **Altura**, fato confirmado pelo Coeficiente de Correlação de Pearson (**R**) que após o teste de hipótese para avaliar a significância da correlação, demonstrou possuir correlação não nula. A Tabela 1 traz os resultados do teste de hipóteses para correlação e o Intervalo de Confiança para o verdadeiro valor da correlação, podendo concluir, com base no p-valor menor que o nível de significância (**$\alpha = 5\%$**), que a hipótese nula ($H_0$) foi rejeitada, assumindo-se a hipótese alternativa ($H_1$) que afirma que $\rho \neq 0$.

O Coeficiente de Determinação ($R^2$) apresenta um valor baixo, podendo afirmar que apenas aproximadamente 36% da variabilidade dos dados está sendo explicada pelo modelo de regressão calculado.

```{r tab1:teste_correlacao}
#| echo: false
#| warning: false


cortest1 <- cor.test(dados1$volume, dados1$height)

resultados <- cbind(cortest1$statistic, cortest1$p.value)
aux <- rbind(cortest1$conf.int[1:2])

resultados <- cbind(resultados, aux)

rownames(resultados) <- "Altura" 
colnames(resultados) <- c("t", "p-valor", "LI", "LS")

resultados|>
  kbl(
    caption = "Teste de Hipótese para Correlação entre Volume e Altura",
    digits = 5,
    format.args=list(big.mark=".", decimal.mark=","),
    align = "c", row.names = T, booktabs = T
  )|>
  kable_styling(
    full_width = F, position = 'center', 
    latex_options = c("striped", "HOLD_position", "repeat_header")
  )|>
  column_spec(1, bold = T
  )|>
  footnote(
    general = "Teste realizado com 5% de significância",
    general_title = "Nota:",
    footnote_as_chunk = T
  )|>
  kable_material()
```


### Significância do Modelo

Após o ajuste do modelo existe a necessidade de se avaliar a significância do mesmo, o teste de hipótese para tal situação será realizado, contendo as seguintes hipóteses:

$$H_0: \hat{\beta_1} = 0$$
$$H_1: \hat{\beta_1} \neq 0.$$
As Tabelas 4 e 5 trazem os principais resultados da tabela ANOVA e do Intervalo de Confiança para os parâmetros, possibilitando assim inferir sobre o modelo ajustado.


```{r}
#| echo: false
#| warning: false

fit_anova <- anova(mFit1)|>
  as.data.frame()

fit_anova <- fit_anova|>
  mutate(
    `F value` = 
      scales::number(`F value`, accuracy = 0.0001, 
                     big.mark = ".", decimal.mark = ","),
    `Pr(>F)` = 
      scales::number(`Pr(>F)`, accuracy = 0.0001, 
                     big.mark = ".", decimal.mark = ","))

fit_anova[is.na(fit_anova)] <- ""

rownames(fit_anova) <- c("Regressão", "Resíduos")

fit_anova|>
  kbl(
    caption = "Análise de Variância (ANOVA)",
    format.args=list(big.mark=".", decimal.mark=","),
    digits = 3, align = "c", row.names = T, 
    booktabs = T, escape = F,
    col.names = c("GL", "Soma de Quadrados", "Quadrado Médio", "Estatística F-Snedecor", "p-valor")
  )|>
  kable_styling(
    full_width = F, position = 'center', 
    latex_options = c("striped", "HOLD_position", "repeat_header")
  )|>
  column_spec(1, bold = T
  )|>
    footnote(
    number = c("GL: Graus de Liberdade"),
    number_title = "Legenda:",
    footnote_as_chunk = F
  )|>
  kable_material()


resultados <- cbind(confint(mFit1))
rownames(resultados) <- c("Beta 0", "Beta 1")

resultados|>
  kbl(
    caption = "Intervalos de Confiança para os parâmetros estimados no MRLS.",
    format.args=list(big.mark=".", decimal.mark=","),
    digits = 3, align = "c", row.names = T, booktabs = T,
    escape = F,
    col.names = c("LI", "LS")
  )|>
  kable_styling(
    full_width = F, position = 'center', 
    latex_options = c("striped", "HOLD_position", "repeat_header")
  )|>
  column_spec(1, bold = T
  )|>
    footnote(
    symbol = "Nível de Significância de 5%.",
    symbol_title = "",
    footnote_as_chunk = T
  )|>
    footnote(
    number = c(
      "LI: Limite Inferior (alpha = 2,5%)", 
      "LS: Limite Superior (alpha = 97,5%)"),
    number_title = "Legenda:",
    footnote_as_chunk = F
  )|>
  kable_material()
```

Com base na Tabela 1, avaliando o p-valor é possível afirmar que o modelo é significante rejeitando assim $H_0$ que tem como pressuposto $\hat{\beta_1} = 0$.

Através dos Intervalos de Confiança calculados é possível afirmar **com 95% de confiança que o verdadeiro valor de $\beta_0$ está entre `r glue::glue('({scales::number(confint(mFit1)[1,1], accuracy = 0.0001, big.mark = ".", decimal.mark = ",")}; {scales::number(confint(mFit1)[1,2], accuracy = 0.0001, big.mark = ".", decimal.mark = ",")})')` e que o verdadeiro valor de $\beta_1$ está entre `r glue::glue('({scales::number(confint(mFit1)[2,1], accuracy = 0.0001, big.mark = ".", decimal.mark = ",")}; {scales::number(confint(mFit1)[2,2], accuracy = 0.0001, big.mark = ".", decimal.mark = ",")})')`**.


### Análise de Resíduos

```{r fig5:analise_residuos}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-height: 6


mFit1_resid <- broom::augment(mFit1)

#### Gráfico de Resíduos contra Valor Médio
d1 <- mFit1_resid|>
  ggplot(aes(x = .fitted, y = .resid)) + 
  geom_point(color = "#234B6E") +
  geom_hline(yintercept = 0, linetype = 2, size = 0.2) +
  geom_smooth(
    se = T, color = "tomato", method = 'loess', formula = 'y ~ x')+
  labs(
    x = "Valores Médios Ajustados",
    y = "Resíduos Ordinários",
    title = "Gráfico de Resíduos vs. Valores Ajustados"
  )+
  # scale_x_continuous(breaks = seq(0,30,5))+
  scale_x_continuous(
    labels = scales::number_format(
      big.mark = ".", decimal.mark = ","))+
  scale_y_continuous(
    labels = scales::number_format(
      big.mark = ".", decimal.mark = ","))+
  theme_minimal()+
  theme(
    legend.position = "none",
    plot.title = element_text(size = 11, face = "plain"),
    axis.title = element_text(size = 8, face = "plain"),
    axis.line = element_line(size = 0.8, color = "#222222"))
  
#### Gráfico de normalidade dos resíduos
d2 <- mFit1_resid %>% 
  ggplot(aes(sample = .std.resid)) + 
  qqplotr::stat_qq_band(alpha = 0.3) + # Plota a banda de confiança
  qqplotr::stat_qq_point(color = "#234B6E") + # Plota os pontos
  qqplotr::stat_qq_line(linetype = 2, size = 0.2) + # Plota a reta
  labs(
    x = "Quantil Teórico",
    y = "Quantil Amostral",
    title = "Gráfico quantil-quantil normal"
  )+
  # scale_x_continuous(breaks = seq(-3,3,1))+
  scale_x_continuous(
    labels = scales::number_format(
      big.mark = ".", decimal.mark = ","))+
  scale_y_continuous(
    labels = scales::number_format(
      big.mark = ".", decimal.mark = ","))+
  theme_minimal()+
  theme(
    legend.position = "none",
    plot.title = element_text(size = 11, face = "plain"),
    axis.title = element_text(size = 8, face = "plain"),
    axis.line = element_line(size = 0.8, color = "#222222"))
  
##### Gráfico Homogeneidade de Variâncias (Locação-Escala) ----
d3 <- mFit1_resid %>% 
  ggplot(aes(x = .fitted, y = sqrt(abs(.std.resid)))) + 
  geom_point(color = "#234B6E") +
  # geom_hline(yintercept = 0, linetype = 2, size = 0.2) +
  geom_smooth(
    se = T, color = "tomato", method = 'loess', formula = 'y ~ x')+
  # ylab("$\\sqrt(Resíduos Padronizados)$")+
  # ggtitle("Teste")+
  labs(
    x = "Valores Ajustados",
    y = expression(sqrt("|Resíduos Padronizados|")),
    title = "Homogeneidade de Variâncias \n(Locação-Escala)")+
  scale_x_continuous(
    labels = scales::number_format(
      big.mark = ".", decimal.mark = ","))+
  scale_y_continuous(
    labels = scales::number_format(
      big.mark = ".", decimal.mark = ","))+
  theme_minimal()+
  theme(
    legend.position = "none",
    plot.title = element_text(size = 11, face = "plain"),
    axis.title = element_text(size = 8, face = "plain"),
    axis.line = element_line(size = 0.8, color = "#222222"))

d1 + d2 + d3 + 
  plot_layout(ncol = 2) +
  plot_annotation(
  title = "Figura 2: Análise de resíduos do modelo ajustado",
  tag_levels = c("A", "1"), tag_prefix = "Sub Fig. ",
  tag_sep = ".", tag_suffix = ":") &
  theme(
    legend.position = "none",
    plot.tag.position = c(0, 1),
    plot.tag = element_text(size = 6, hjust = 0, vjust = -0.4)
  )


```



A Figura 2 Sub.Fig A apresenta um comportamento assimétrico dos resíduos, podendo constatar uma pequena variabilidade inicial e um aumento desta à medida que os valores ajustados aumentam, caracterizando uma heterocedasticidade. A Sub.Fig C, que trada da Homogeneidade de Variâncias (Locação-Escala) mostra que há um problema na variabilidade dos dados, corrobora com a interpretação feita na análise da Sub.Fig. A, de que há uma mudança na variabilidade dos dados, caracterizando Heterocedasticidade dos dados.
A Sub.Fig. B que traz o gráfico para avaliação da normalidade dos dados, mostra que apesar dos dados não estarem precisamente sobre a reta de referência, os mesmos estão contidos na região pertencente ao Intervalo de Confiança - IC, podendo assumir que há normalidade, contudo tal avaliação será confirmada após os Testes de Diagnóstico.



### Testes de Diagnósticos do Modelo

Para avaliar se o modelo atende aos pressupostos, além da análise gráfica podem ser realizados testes de diagnósticos, que são testes de hipóteses para avaliação dos pressupostos que são:

- Normalidade;

  $H_0:$ Os resíduos possuem normalidade.

  $H_1:$ Os resíduos **não** possuem normalidade.

- Homoscedasticidade (Homogeneidade de Variância);

  $H_0:$ Os resíduos possuem variância constante.

  $H_1:$ Os resíduos **não** possuem variância constante.

- Linearidade;
- Independência.

  $H_0$: Existe correlação serial entre os resíduos.
  
  $H_1$: **Não** existe correlação serial entre os resíduos.

Para tanto serão utilizados os seguintes testes:

- Shapiro-Wilk, para avaliar a Normalidade;
- Breush-Pagan, para avaliar a Homoscedasticidade;
- Durbin-Watson, para avaliar a Independência.


```{r tab4:teste-diagnostico}
#| echo: false
#| warning: false

res1 <- residuals(mFit1)

##### Teste de normalidade dos resíduos ----
  #H0: normalidade
  #H1: não normalidade

# SW*
t_sw <- shapiro.test(res1)

##### Teste de homoscedasticidade dos resíduos ----
  #H0: resíduos homoscedásticos - Variância constante
  #H1: resíduos heteroscedásticos - Variância NÃO constante

# BP*
t_bp <- lmtest::bptest(mFit1, studentize = F)

# Teste deF para linearidade

# Teste de correlação serial lag 1 (Independência dos erros)
  #H0: correlacionados - existe correlação serial
  #H1: não correlacionados - não existe correlação serial ///ficou confuso no vídeo as hipoteses///

# DW
t_dw <- lmtest::dwtest(mFit1)

resultados <- rbind(
  t_sw$statistic,
  t_bp$statistic,
  t_dw$statistic)

aux <- rbind(
  t_sw$p.value,
  t_bp$p.value,
  t_dw$p.value)

resultados <- cbind(resultados, aux)

rownames(resultados) <- c("Shapiro-Wilk", "Breush-Pagan", "Durbin-Watson")

colnames(resultados) <- c("Estatística de teste", "p-valor")

resultados|>
  kbl(
    caption = "Testes de Diagnósticos dos Resíduos",
    digits = 5,
    format.args=list(big.mark=".", decimal.mark=","),
    align = "c", row.names = T, booktabs = T
  )|>
  kable_styling(
    full_width = F, position = 'center', 
    latex_options = c("striped", "HOLD_position", "repeat_header")
  )|>
  column_spec(1, bold = T)|>
  kable_material()
```





### Transformações dos Dados

Tendo em vista que o modelo não atendeu aos pressupostos se faz necessário a utilização de técnicas para buscar uma melhora de performace do modelo antes da possibilidade de descarte e para tanto algumas transformações são sugeridas, sendo estas:

- T1 = $\sqrt{Y}$;
- T2 = $log(Y)$;
- T3 = $Y^2$.

Sendo Y a variável resposta do modelo representada pelo Volume.



```{r tab2:summary-transform}
#| echo: false
#| warning: false


## Transformações ----

t1 <- dados1|>
  mutate(volume = sqrt(volume))

t2 <- dados1|>
  mutate(volume = log(volume))

t3 <- dados1|>
  mutate(volume = volume^2)

### Medidas Resumo ----

resultados <- cbind(dados1$volume, t1$volume, t2$volume, t3$volume)

colnames(resultados) <- c("1. Volume", "2. √Volume", "3. log(Volume)", "4. Volume²")

resultados |>
  # rename(
  #   "Altura" = height,
  #   "Volume" = volume,
  #   "Circunferência" = girth
  # )|>
  summarytools::descr(
    stats = c("min", "q1", "med", "mean","q3", "max",  "sd", "cv"),
    justify = "c",
    style = "rmarkdown",
    transpose = T
  )|>
  kbl(
    caption = "Medidas Resumo da característica Volume com e sem transformações.",
    digits = 3,
    format.args=list(big.mark=".", decimal.mark=","),
    align = "c", 
    row.names = T, 
    booktabs = T
  )|>
  # footnote(general = "---") |>
  kable_styling(
    full_width = F,
    position = 'center', 
    latex_options = c("striped", "HOLD_position", "scale_down")
  )|>
  column_spec(1, bold = T)|>
  kable_material()


```


```{r fig4:box-cox}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-height: 4

par(mfrow = c(1, 1), mar=c(4,4,2,1), oma=c(1.5,1,1.5,1))
MASS::boxcox(mFit1, lambda = seq(-1, 1, 1/10), ylab = "log-Verossimilhança")
mtext(side = 3, text = "Figura 4: Transformação Box-Cox", outer = T)
par(mfrow = c(1, 1), mar=c(5, 4, 4, 2) + 0.1, oma=c(1.5,1,1.5,1))


bc <- MASS::boxcox(mFit1)
lambda <- bc$x[which.max(bc$y)]
```

Analisando o gráfico das **famílias de transformações Box-Cox** é possível identificar que $-0,5 < \lambda_{max} < 0$ ($\lambda_{max} \approx $ `r scales::number(lambda, accuracy = 0.001, big.mark = ".", decimal.mark = ",")`), partindo do princípio que o valor zero está incluso no intervalo de valores possíveis de $\lambda$ que minimizam a variância residual, mesmo o zero não sendo o máximo valor assumido, ainda assim, visando a escolha de uma transformação que possibilite uma interpretação facilitada, a escolha da transformação $log(Y)$ torna-se a escolha mais assertiva. Para avaliar esta situação a Figura 3 foi construída.

```{r fig3:transform}
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-height: 6

d1 <- dados1|>
  ggplot(aes(x = height, y = volume)) +
  geom_point(
    color = "#234B6E"
  )+
  labs(
    title = "Modelo Ajustado entre o Volume e à \nAltura",
    y = 'Volume (m³)',
    x = 'Altura (m)'
  )+
  ggpubr::stat_cor(
    aes(label = paste(..r.label.., ..rr.label.., sep = "~`; `~")),
    cor.coef.name = c("R"),
    label.sep = "; ", geom = "text",
    color="red",
    method = "pearson",
    label.x = 19.2, label.y = 2, show.legend = F,
    p.accuracy = 0.001, r.accuracy = 0.0001,
    size = 2.5)+
  ggpubr::stat_regline_equation(
    aes(label = paste(..eq.label.., ..adj.rr.label.., sep = "~`; `~")),
    geom = "text", label.x = 19.2, label.y = 1.75,
    position = "identity",
    color="red",
    size = 2.5, show.legend = F
  )+
  geom_smooth(
    method=lm, se=T, formula = "y ~ x", color = "tomato")+
  theme_minimal()+
  scale_x_continuous(breaks = seq(19,27,1))+
  scale_y_continuous(
    breaks = seq(0, 2.5, 0.5),
    labels = scales::number_format(
      big.mark = ".",
      decimal.mark = ","
    ))+
  theme(legend.position = "none",
        plot.title = element_text(size = 11, face = "plain"),
        axis.title = element_text(size = 8, face = "plain"),
        axis.line = element_line(size = 0.8, color = "#222222"))

d2 <- t1|>
  ggplot(aes(x = height, y = volume)) +
  geom_point(
    color = "#234B6E"
  )+
  labs(
    title = "Modelo Ajustado entre a raiz[Volume (m³)] \ne à Altura",
    y = expression(sqrt('Volume (m³)')),
    x = 'Altura (m)'
  )+
  ggpubr::stat_cor(
    aes(label = paste(..r.label.., ..rr.label..,  sep = "~`; `~")),
    cor.coef.name = c("R"),
    label.sep = "; ", geom = "text",
    color="red",
    method = "pearson",
    label.x = 19.2, label.y = 1.375, show.legend = F,
    p.accuracy = 0.001, r.accuracy = 0.0001,
    size = 2.5)+
  ggpubr::stat_regline_equation(
    aes(label = paste(..eq.label.., ..adj.rr.label.., sep = "~`; `~")),
    geom = "text", label.x = 19.2, label.y = 1.25, 
    position = "identity", 
    color="red",
    size = 2.5, show.legend = F
  )+
  geom_smooth(
    method=lm, se=T, formula = "y ~ x", color = "tomato")+
  theme_minimal()+
  scale_x_continuous(breaks = seq(19,27,1))+
  scale_y_continuous(
    breaks = seq(0, 1.5, 0.25),
    labels = scales::number_format(
      big.mark = ".",
      decimal.mark = ","
    ))+
  theme(legend.position = "none",
        plot.title = element_text(size = 11, face = "plain"),
        axis.title = element_text(size = 8, face = "plain"),
        axis.line = element_line(size = 0.8, color = "#222222"))

d3 <- t2|>
  ggplot(aes(x = height, y = volume)) +
  geom_point(
    color = "#234B6E"
  )+
  labs(
    title = "Modelo Ajustado entre o log[Volume (m³)] \ne à Altura",
    y = expression(log('Volume (m³)')),
    x = 'Altura (m)'
  )+
  ggpubr::stat_cor(
    aes(label = paste(..r.label.., ..rr.label..,  sep = "~`; `~")),
    cor.coef.name = c("R"),
    label.sep = "; ", geom = "text",
    color="red",
    method = "pearson",
    label.x = 19.2, label.y = 0.7, show.legend = F,
    p.accuracy = 0.001, r.accuracy = 0.0001,
    size = 2.5)+
  ggpubr::stat_regline_equation(
    aes(label = paste(..eq.label.., ..adj.rr.label.., sep = "~`; `~")),
    geom = "text", label.x = 19.2, label.y = 0.5, 
    position = "identity", 
    color="red",
    size = 2.5, show.legend = F
  )+
  geom_smooth(
    method=lm, se=T, formula = "y ~ x", color = "tomato")+
  theme_minimal()+
  scale_x_continuous(breaks = seq(19,27,1))+
  scale_y_continuous(
    breaks = seq(-1.3, 0.8, 0.3),
    labels = scales::number_format(
      big.mark = ".",
      decimal.mark = ","
    ))+
  theme(legend.position = "none",
        plot.title = element_text(size = 11, face = "plain"),
        axis.title = element_text(size = 8, face = "plain"),
        axis.line = element_line(size = 0.8, color = "#222222"))

d4 <- t3|>
  ggplot(aes(x = height, y = volume)) +
  geom_point(
    color = "#234B6E"
  )+
  labs(
    title = "Modelo Ajustado entre o [Volume (m³)]² \ne à Altura",
    y = '[Volume (m³)]²',
    x = 'Altura (m)'
  )+
  ggpubr::stat_cor(
    aes(label = paste(..r.label.., ..rr.label..,  sep = "~`; `~")),
    cor.coef.name = c("R"),
    label.sep = "; ", geom = "text",
    color="red",
    method = "pearson",
    label.x = 19.2, label.y = 4.5, show.legend = F,
    p.accuracy = 0.001, r.accuracy = 0.0001,
    size = 2.5)+
  ggpubr::stat_regline_equation(
    aes(label = paste(..eq.label.., ..adj.rr.label.., sep = "~`; `~")),
    geom = "text", label.x = 19.2, label.y = 4, 
    position = "identity", 
    color="red",
    size = 2.5, show.legend = F
  )+
  geom_smooth(
    method=lm, se=T, formula = "y ~ x", color = "tomato")+
  theme_minimal()+
  scale_x_continuous(breaks = seq(19,27,1))+
  scale_y_continuous(
    breaks = seq(-0.5, 5, 0.75),
    labels = scales::number_format(
      big.mark = ".",
      decimal.mark = ","
    ))+
  theme(legend.position = "none",
        plot.title = element_text(size = 11, face = "plain"),
        axis.title = element_text(size = 8, face = "plain"),
        axis.line = element_line(size = 0.8, color = "#222222"))


d1 + d2 + d3 + d4 +
  plot_layout(ncol = 2) +
  plot_annotation(
    title = "Figura 3: Modelo ajustado e suas transformações",
    subtitle = "Comparativo entre o modelo ajustado sem transformação com os modelos após a transformações \nda variável resposta",
    tag_levels = c("A", "1"), tag_prefix = "Sub Fig. ",
    tag_sep = ".", tag_suffix = ":") &
  theme(
    legend.position = "none",
    plot.tag.position = c(0, 1),
    plot.tag = element_text(size = 6, hjust = 0, vjust = -0.4))


```


Com base nos valores do Coeficiente de Determinação $R^2$ dos gráficos contidos da Figura 3, é possível constatar que o gráfico cuja transformação $log(Y)$ foi aplicada apresentou uma melhora no que diz respeito a possibilidade do modelo explicar a variabilidade dos dados, mesmo não sendo um valor considerado satisfatório, ainda assim é possível constatar a melhora de performance ao aplicar a transformação na característica utilizada como variável resposta.

## Conclusão

Após as análises realizadas no modelo ajustado é possível afirmar que para cada aumento de um metro na atura da árvore, há uma redução média de aproximadamente $exp(-4,4)$ m³ no volume ou aproximadamente `r scales::number(exp(-4.4), accuracy = 0.001, big.mark = ".", decimal.mark = ",")` m³ no volume da árvore.



# Parte 2: Regressão Linear Múltipla - Estimação pontual














